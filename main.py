import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from tg_api_key import TG_API_KEY


logging.basicConfig(level=logging.INFO)
bot = Bot(token=TG_API_KEY)
dp = Dispatcher()


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    msg = """
<b>üåü MinifyLink üåü</b>

–Ø - —É–º–Ω—ã–π –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º.

üìå –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:
- –°–æ–∫—Ä–∞—â–∞—Ç—å —Å—Å—ã–ª–∫–∏, –∞ —Ç–∞–∫–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥—ã –∫ –Ω–∏–º
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∫—É –ø–æ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–º —Å—Å—ã–ª–∫–∞–º

–ù–∞–∂–º–∏—Ç–µ /help —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!

<code>–ñ–¥—É –≤–∞—à–∏—Ö –∫–æ–º–∞–Ω–¥!</code>
"""
    await message.answer(msg, parse_mode="HTML")


@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    msg = """
<b>üõ† –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É üõ†</b>

–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/help - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
/add - –°–æ–∑–¥–∞—Ç—å —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
/stat - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Å—ã–ª–∫–µ

<code>–ñ–¥—É –≤–∞—à–∏—Ö –∫–æ–º–∞–Ω–¥!</code>
"""
    await message.answer(msg, parse_mode="HTML")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
