name: Deploy Telegram Bot

on:
  push:
    branches: main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Update repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd frontend
            git pull origin main
            python3 -m pip install -r requirements.txt
            docker-compose down
            docker-compose up -d --build

      - name: Install dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd frontend
            python3 -m pip install -r requirements.txt
            docker-compose down
            docker-compose up -d --build

      - name: Update docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd frontend
            docker-compose down
            docker-compose up -d --build

      - name: Check container is running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            if ! docker ps | grep -q minify_link_bot; then
              echo "Container not running"
              exit 1
            fi
            echo "Container is running successfully"

      - name: Verify bot connection
        run: |
          if ! curl -s "https://api.telegram.org/bot${{ secrets.TG_API_KEY }}/getMe" | grep -q "\"ok\":true"; then
            echo "Bot cannot connect to Telegram API!"
            exit 1
          fi
          echo "Bot is operational and connected to Telegram API"
